{"version":3,"file":"static/js/435.d1789765.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieInfo.styled.js","components/MovieDetails/MovieInfo.jsx","pages/MovieDetails.jsx","service/APIservice.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: inline-flex;\n  width: auto;\n`;\n\nexport const CardBox = styled.div`\n  display: block;\n  padding: 30px;\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const ImageBox = styled.img`\n  display: inline-flex;\n  width: 25%;\n`;\nexport const Title = styled.h2`\n  padding: 0;\n  margin: 0;\n  border: 0;\n`;\n","import { Container, CardBox, ImageBox, Title } from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ dataMovie, imageMovie, arrayGenres, release }) => {\n  return (\n    <Container>\n      <ImageBox src={imageMovie} alt={`${dataMovie.original_title}`} />\n      <CardBox>\n        <Title>{`${dataMovie.original_title} / ${release} `}</Title>\n        <p>{`User score: ${(dataMovie.vote_average * 10).toFixed(2)}%`}</p>\n        <h3>Overview</h3>\n        <p>{`${dataMovie.overview}`}</p>\n        <h3>Genres</h3>\n        <p>{arrayGenres}</p>\n      </CardBox>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  dataMovie: PropTypes.object,\n  imageMovie: PropTypes.string,\n  arrayGenres: PropTypes.string,\n  release: PropTypes.string,\n};\n","import { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { lazy, Suspense, useState, useEffect } from 'react';\nimport { getFilmById } from '../service/APIservice';\n// import { BackLink } from '../components/BackLink/BackLink';\nimport { MovieInfo } from '../components/MovieDetails/MovieInfo';\n\nconst BackLink = lazy(() => import('../components/BackLink/BackLink'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  // const movie = getFilmById(id);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const [dataMovie, setDataMovie] = useState({});\n  const [imageMovie, setImageMovie] = useState('');\n  const [arrayGenres, setArrayGenres] = useState('');\n  const [release, setRelease] = useState('');\n\n  useEffect(() => {\n    getFilmById(movieId).then(movie => {\n      // console.log('data  id', movieId);\n      // console.log('data movie id', movie);\n      setDataMovie(movie);\n      setImageMovie(`https://image.tmdb.org/t/p/w500${movie.poster_path}`);\n      console.log('movie.genres', movie.genres);\n      setArrayGenres(movie.genres.map(item => item.name).join(', '));\n      setRelease(movie.release_date.slice(0, 7));\n    });\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      <MovieInfo\n        dataMovie={dataMovie}\n        imageMovie={imageMovie}\n        arrayGenres={arrayGenres}\n        release={release}\n      />\n\n      <h3>Additional info:</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet></Outlet>\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","//https://api.themoviedb.org/3/movie/550?api_key=0753d31482992eaeca4a1269ff45804b\n\n//1. Search\n//https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n//2. Query For Details   id=343611\n//https://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0753d31482992eaeca4a1269ff45804b';\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nexport async function getTrendingFilms() {\n  try {\n    //https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&include_adult=true`;\n    return await axios.get(url).then(response => {\n      return response.data;\n    });\n  } catch (error) {\n    console.log('error: ', error.message);\n  }\n}\nexport async function getSearchFilms(query, page = 1) {\n  try {\n    //https://api.themoviedb.org/3/search/movie?api_key={api_key}&language=en-US&query=Jack+Reacher\n    const url = `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=true`;\n    return await axios.get(url).then(response => {\n      // console.log('getSearchFilms', response.data);\n      return response.data;\n    });\n  } catch (error) {\n    console.log('error: ', error.message);\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    return await axios.get(url).then(response => {\n      console.log('getFilmById', response.data);\n      return response.data;\n    });\n  } catch (error) {\n    console.log('error: ', error.message);\n  }\n}\n\n//movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n\nexport async function getCreditsFilmById(filmId) {\n  try {\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n    const url = `${BASE_URL}/movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`;\n    return await axios.get(url).then(response => {\n      console.log('getCreditsFilmById', response.data);\n      return response.data;\n    });\n  } catch (error) {\n    console.log('error: ', error.message);\n  }\n}\n\n//movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getReviewsFilmById(filmId) {\n  try {\n    const url = `${BASE_URL}/movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    return await axios.get(url).then(response => {\n      console.log('getReviewsFilmById', response.data);\n      return response.data;\n    });\n  } catch (error) {\n    console.log('error: ', error.message);\n  }\n}\n"],"names":["Container","styled","CardBox","ImageBox","Title","MovieInfo","dataMovie","imageMovie","arrayGenres","release","src","alt","original_title","vote_average","toFixed","overview","BackLink","lazy","movieId","useParams","location","useLocation","backLinkHref","state","from","useState","setDataMovie","setImageMovie","setArrayGenres","setRelease","useEffect","getFilmById","then","movie","poster_path","console","log","genres","map","item","name","join","release_date","slice","to","Suspense","fallback","BASE_URL","API_KEY","SEARCH_URL","getTrendingFilms","url","axios","response","data","message","getSearchFilms","query","page","id","getCreditsFilmById","filmId","getReviewsFilmById"],"sourceRoot":""}